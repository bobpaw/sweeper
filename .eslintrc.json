{
	"env": {
		"browser": true,
		"es2020": true,
		"mocha": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"sourceType": "module",
		"ecmaVersion": 11
	},
	"plugins": [
		"@typescript-eslint",
		"jsdoc"
	],
	"ignorePatterns": [
		"out/",
		"**/*.d.ts"
	],
	"rules": {
		"indent": [
			"error",
			"tab"
		],
		"linebreak-style": [
			"error",
			"unix"
		],
		"quotes": [
			"error",
			"double",
			{
				"avoidEscape": true,
				"allowTemplateLiterals": true
			}
		],
		"quote-props": [
			"error",
			"consistent-as-needed"
		],
		"semi": [
			"error",
			"always"
		],
		"eol-last": [
			"error",
			"always"
		],
		"block-spacing": [
			"error",
			"always"
		],
		"arrow-spacing": [
			"error",
			{
				"before": true,
				"after": true
			}
		],
		"comma-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"space-before-blocks": [
			"error",
			"always"
		],
		"keyword-spacing": [
			"error",
			{
				"before": true,
				"after": true
			}
		],
		"object-curly-spacing": [
			"error",
			"always"
		]
	},
	"overrides": [
		{
			"files": [
				"*.ts"
			],
			"excludedFiles": [
				"*.test.ts"
			],
			"rules": {
				"jsdoc/check-access": "error",
				"jsdoc/check-alignment": "error", // Recommended
				"jsdoc/check-examples": [
					"error",
					{
						"matchingFileName": "example.md/*.js"
					}
				],
				"jsdoc/check-indentation": "error",
				"jsdoc/check-param-names": "error", // Recommended
				"jsdoc/check-syntax": "error",
				"jsdoc/check-tag-names": "error", // Recommended
				"jsdoc/check-types": "error", // Recommended
				"jsdoc/empty-tags": "error",
				"jsdoc/implements-on-classes": "error", // Recommended
				"jsdoc/match-description": "off",
				"jsdoc/newline-after-description": "error", // Recommended
				"jsdoc/no-bad-blocks": "error",
				"jsdoc/no-types": 1, // Using TypeScript
				"jsdoc/no-undefined-types": "error", // Recommended
				"jsdoc/require-description": "error",
				"jsdoc/require-description-complete-sentence": "warn",
				"jsdoc/require-example": [
					"off",
					{
						"exemptNoArguments": true
					}
				],
				"jsdoc/require-file-overview": "warn",
				"jsdoc/require-hyphen-before-param-description": "off",
				"jsdoc/require-jsdoc": "warn",
				"jsdoc/require-param": "error",
				"jsdoc/require-param-description": "error",
				"jsdoc/require-param-name": "error",
				"jsdoc/require-property": "error",
				"jsdoc/require-property-description": "error",
				"jsdoc/require-property-name": "error",
				"jsdoc/require-returns": "error",
				"jsdoc/require-returns-check": "error",
				"jsdoc/require-returns-description": "error",
				"jsdoc/require-throws": "error",
				"jsdoc/valid-types": 0 // Recommended; Broken rn
			}
		},
		{
			"files": [
				"*.json"
			],
			"rules": {
				"quote-props": [
					"error",
					"always"
				],
				"linebreak-style": "off",
				"semi": "off"
			}
		}
	]
}
